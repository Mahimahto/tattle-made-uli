name: Release
on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      uli-website: ${{ steps.filter.outputs.uli-website}}
      uli-server: ${{ steps.filter.outputs.uli-server }}
      uli-community: ${{ steps.filter.outputs.uli-community }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - uses: dorny/paths-filter@v2.2.0
        id: filter
        with:
          filters: |
            uli-website:
                - 'uli-website/**/*'
            uli-server:
            - 'browser-extension/api-server/**/*'
            uli-community:
              - 'uli-community/**/*'

  uli-website:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.uli-website == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Install Packages
        run: |
          pwd
          cd uli-website 
          pwd
          ls
          npm install 
          npm run build
          npm run deploy

  uli-community:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.uli-community == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "setting variables"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Publish to Docker
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          username: tattletech
          password: ${{ secrets.DOCKER_PASSWORD }}
          name: tattletech/uli-community
          tags: ${{ steps.vars.outputs.sha_short }}
          dockerfile: uli-community/Dockerfile